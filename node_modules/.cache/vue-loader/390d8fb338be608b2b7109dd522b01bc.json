{"remainingRequest":"/Users/ryanoctavius/vuerest_9353/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ryanoctavius/vuerest_9353/node_modules/vue2-gmap-custom-marker/gmap-custom-marker.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ryanoctavius/vuerest_9353/node_modules/vue2-gmap-custom-marker/gmap-custom-marker.vue","mtime":499162500000},{"path":"/Users/ryanoctavius/vuerest_9353/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ryanoctavius/vuerest_9353/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ryanoctavius/vuerest_9353/node_modules/vuetify-loader/lib/loader.js","mtime":1567240333000},{"path":"/Users/ryanoctavius/vuerest_9353/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ryanoctavius/vuerest_9353/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIFZ1ZUdvb2dsZU1hcHMgZnJvbSAidnVlMi1nb29nbGUtbWFwcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBtaXhpbnM6IFtWdWVHb29nbGVNYXBzLk1hcEVsZW1lbnRNaXhpbl0sCiAgcHJvcHM6IHsKICAgIG1hcmtlcjogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZAogICAgfSwKICAgIG9mZnNldFg6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAwCiAgICB9LAogICAgb2Zmc2V0WTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDAKICAgIH0sCiAgICBhbGlnbm1lbnQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAidG9wIgogICAgfSwKICAgIHpJbmRleDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDUwCiAgICB9CiAgfSwKICBpbmplY3Q6IHsKICAgICRjbHVzdGVyUHJvbWlzZTogewogICAgICBkZWZhdWx0OiBudWxsCiAgICB9CiAgfSwKICBiZWZvcmVDcmVhdGUob3B0aW9ucykgewogICAgaWYgKHRoaXMuJGNsdXN0ZXJQcm9taXNlKSB7CiAgICAgIG9wdGlvbnMubWFwID0gbnVsbDsKICAgIH0KCiAgICByZXR1cm4gdGhpcy4kY2x1c3RlclByb21pc2U7CiAgfSwKICBtZXRob2RzOiB7CiAgICBhZnRlckNyZWF0ZShpbnN0KSB7CiAgICAgIGlmICh0aGlzLiRjbHVzdGVyUHJvbWlzZSkgewogICAgICAgIHRoaXMuJGNsdXN0ZXJQcm9taXNlLnRoZW4oY28gPT4gewogICAgICAgICAgY28uYWRkTWFya2VyKGluc3QpOwogICAgICAgICAgdGhpcy4kY2x1c3Rlck9iamVjdCA9IGNvOwogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgb3BhY2l0eTogMC4wMQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICBtYXJrZXIodmFsKSB7CiAgICAgIHRoaXMuJG1hcFByb21pc2UudGhlbihtYXAgPT4gdGhpcy4kb3ZlcmxheS5zZXRQb3NpdGlvbigpKTsKICAgIH0sCiAgICB6SW5kZXgodmFsKSB7CiAgICAgIHRoaXMuJG92ZXJsYXkucmVwYWludCgpCiAgICB9CiAgfSwKICBwcm92aWRlKCkgewogICAgY29uc3Qgc2VsZiA9IHRoaXM7CiAgICByZXR1cm4gdGhpcy4kbWFwUHJvbWlzZS50aGVuKG1hcCA9PiB7CiAgICAgIGNsYXNzIE92ZXJsYXkgZXh0ZW5kcyBnb29nbGUubWFwcy5PdmVybGF5VmlldyB7CiAgICAgICAgY29uc3RydWN0b3IobWFwKSB7CiAgICAgICAgICBzdXBlcigpOwogICAgICAgICAgdGhpcy5zZXRNYXAobWFwKTsKICAgICAgICAgIHRoaXMuZHJhdyA9ICgpID0+IHRoaXMucmVwYWludCgpOwogICAgICAgICAgdGhpcy5zZXRQb3NpdGlvbiA9ICgpID0+IHRoaXMucmVwYWludCgpOwogICAgICAgIH0KICAgICAgICByZXBhaW50KCkgewogICAgICAgICAgY29uc3QgZGl2ID0gc2VsZi4kZWw7CiAgICAgICAgICBjb25zdCBwcm9qZWN0aW9uID0gdGhpcy5nZXRQcm9qZWN0aW9uKCk7CiAgICAgICAgICBpZiAocHJvamVjdGlvbiAmJiBkaXYpIHsKICAgICAgICAgICAgY29uc3QgcG9zUGl4ZWwgPSBwcm9qZWN0aW9uLmZyb21MYXRMbmdUb0RpdlBpeGVsKHNlbGYubGF0TG5nKTsKICAgICAgICAgICAgbGV0IHgsIHk7CiAgICAgICAgICAgIHN3aXRjaCAoc2VsZi5hbGlnbm1lbnQpIHsKICAgICAgICAgICAgICBjYXNlICJ0b3AiOgogICAgICAgICAgICAgICAgeCA9IHBvc1BpeGVsLnggLSBkaXYub2Zmc2V0V2lkdGggLyAyOwogICAgICAgICAgICAgICAgeSA9IHBvc1BpeGVsLnkgLSBkaXYub2Zmc2V0SGVpZ2h0OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgY2FzZSAiYm90dG9tIjoKICAgICAgICAgICAgICAgIHggPSBwb3NQaXhlbC54IC0gZGl2Lm9mZnNldFdpZHRoIC8gMjsKICAgICAgICAgICAgICAgIHkgPSBwb3NQaXhlbC55OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgY2FzZSAibGVmdCI6CiAgICAgICAgICAgICAgICB4ID0gcG9zUGl4ZWwueCAtIGRpdi5vZmZzZXRXaWR0aDsKICAgICAgICAgICAgICAgIHkgPSBwb3NQaXhlbC55IC0gZGl2Lm9mZnNldEhlaWdodCAvIDI7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICBjYXNlICJyaWdodCI6CiAgICAgICAgICAgICAgICB4ID0gcG9zUGl4ZWwueDsKICAgICAgICAgICAgICAgIHkgPSBwb3NQaXhlbC55IC0gZGl2Lm9mZnNldEhlaWdodCAvIDI7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICBjYXNlICJjZW50ZXIiOgogICAgICAgICAgICAgICAgeCA9IHBvc1BpeGVsLnggLSBkaXYub2Zmc2V0V2lkdGggLyAyOwogICAgICAgICAgICAgICAgeSA9IHBvc1BpeGVsLnkgLSBkaXYub2Zmc2V0SGVpZ2h0IC8gMjsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIGNhc2UgInRvcGxlZnQiOgogICAgICAgICAgICAgIGNhc2UgImxlZnR0b3AiOgogICAgICAgICAgICAgICAgeCA9IHBvc1BpeGVsLnggLSBkaXYub2Zmc2V0V2lkdGg7CiAgICAgICAgICAgICAgICB5ID0gcG9zUGl4ZWwueSAtIGRpdi5vZmZzZXRIZWlnaHQ7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICBjYXNlICJ0b3ByaWdodCI6CiAgICAgICAgICAgICAgY2FzZSAicmlnaHR0b3AiOgogICAgICAgICAgICAgICAgeCA9IHBvc1BpeGVsLng7CiAgICAgICAgICAgICAgICB5ID0gcG9zUGl4ZWwueSAtIGRpdi5vZmZzZXRIZWlnaHQ7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICBjYXNlICJib3R0b21sZWZ0IjoKICAgICAgICAgICAgICBjYXNlICJsZWZ0b3AiOgogICAgICAgICAgICAgICAgeCA9IHBvc1BpeGVsLnggLSBkaXYub2Zmc2V0V2lkdGg7CiAgICAgICAgICAgICAgICB5ID0gcG9zUGl4ZWwueTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIGNhc2UgImJvdHRvbXJpZ2h0IjoKICAgICAgICAgICAgICBjYXNlICJyaWdodGJvdHRvbSI6CiAgICAgICAgICAgICAgICB4ID0gcG9zUGl4ZWwueDsKICAgICAgICAgICAgICAgIHkgPSBwb3NQaXhlbC55OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigiSW52YWxpZCBhbGlnbm1lbnQgdHlwZSBvZiBjdXN0b20gbWFya2VyISIpOwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZGl2LnN0eWxlLmxlZnQgPSB4ICsgc2VsZi5vZmZzZXRYICsgInB4IjsKICAgICAgICAgICAgZGl2LnN0eWxlLnRvcCA9IHkgKyBzZWxmLm9mZnNldFkgKyAicHgiOwogICAgICAgICAgICBkaXYuc3R5bGVbInotaW5kZXgiXSA9IHNlbGYuekluZGV4OwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBvbkFkZCgpIHsKICAgICAgICAgIGNvbnN0IGRpdiA9IHNlbGYuJGVsOwogICAgICAgICAgY29uc3QgcGFuZXMgPSB0aGlzLmdldFBhbmVzKCk7CiAgICAgICAgICBkaXYuc3R5bGUucG9zaXRpb24gPSAiYWJzb2x1dGUiOwogICAgICAgICAgZGl2LnN0eWxlLmRpc3BsYXkgPSAiaW5saW5lLWJsb2NrIjsKICAgICAgICAgIGRpdi5zdHlsZS56SW5kZXggPSBzZWxmLnpJbmRleDsKICAgICAgICAgIHBhbmVzLm92ZXJsYXlMYXllci5hcHBlbmRDaGlsZChkaXYpOwogICAgICAgICAgcGFuZXMub3ZlcmxheU1vdXNlVGFyZ2V0LmFwcGVuZENoaWxkKGRpdik7CiAgICAgICAgICB0aGlzLmdldERyYWdnYWJsZSA9ICgpID0+IGZhbHNlOwogICAgICAgICAgdGhpcy5nZXRQb3NpdGlvbiA9ICgpID0+IHsKICAgICAgICAgICAgcmV0dXJuIG5ldyBnb29nbGUubWFwcy5MYXRMbmcoc2VsZi5sYXQsIHNlbGYubG5nKTsKICAgICAgICAgIH07CiAgICAgICAgICBzZWxmLmFmdGVyQ3JlYXRlKHRoaXMpOwogICAgICAgIH0KICAgICAgICBvblJlbW92ZSgpIHsKICAgICAgICAgIGlmIChzZWxmLiRlbCkgewogICAgICAgICAgICBjb25zdCB1YSA9IHdpbmRvdy5uYXZpZ2F0b3IudXNlckFnZW50CiAgICAgICAgICAgIGNvbnN0IG1zaWUgPSB1YS5pbmRleE9mKCJNU0lFICIpCiAgICAgICAgICAgIGlmIChtc2llID4gMCB8fCAhIXVhLm1hdGNoKC9UcmlkZW50Lipydlw6MTFcLi8pKcKgewogICAgICAgICAgICAgIHNlbGYuJGVsLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc2VsZi4kZWwpCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgc2VsZi4kZWwucmVtb3ZlKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgICAgdGhpcy4kb3ZlcmxheSA9IG5ldyBPdmVybGF5KG1hcCk7CiAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgaWYgKHRoaXMuJG92ZXJsYXkpIHsKICAgICAgICAgICAgdGhpcy4kb3ZlcmxheS5yZXBhaW50KCk7CiAgICAgICAgICAgIHRoaXMub3BhY2l0eSA9IDE7CiAgICAgICAgICB9CiAgICAgIH0sIDEwMCk7CiAgICB9KTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBsYXQoKSB7CiAgICAgIHJldHVybiBwYXJzZUZsb2F0KAogICAgICAgIGlzTmFOKHRoaXMubWFya2VyLmxhdCkgPyB0aGlzLm1hcmtlci5sYXRpdHVkZSA6IHRoaXMubWFya2VyLmxhdAogICAgICApOwogICAgfSwKICAgIGxuZygpIHsKICAgICAgcmV0dXJuIHBhcnNlRmxvYXQoCiAgICAgICAgaXNOYU4odGhpcy5tYXJrZXIubG5nKSA/IHRoaXMubWFya2VyLmxvbmdpdHVkZSA6IHRoaXMubWFya2VyLmxuZwogICAgICApOwogICAgfSwKICAgIGxhdExuZygpIHsKICAgICAgaWYgKHRoaXMubWFya2VyIGluc3RhbmNlb2YgZ29vZ2xlLm1hcHMuTGF0TG5nKSB7CiAgICAgICAgICByZXR1cm4gdGhpcy5tYXJrZXI7CiAgICAgIH0KICAgICAgcmV0dXJuIG5ldyBnb29nbGUubWFwcy5MYXRMbmcodGhpcy5sYXQsIHRoaXMubG5nKTsKICAgIH0KICB9LAogIGRlc3Ryb3llZCgpIHsKICAgICBpZiAodGhpcy4kY2x1c3Rlck9iamVjdCkgewogICAgICB0aGlzLiRjbHVzdGVyT2JqZWN0LnJlbW92ZU1hcmtlcih0aGlzLiRvdmVybGF5LCB0cnVlKTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMuJG92ZXJsYXkuc2V0TWFwKG51bGwpOwogICAgICB0aGlzLiRvdmVybGF5ID0gdW5kZWZpbmVkOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["gmap-custom-marker.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"gmap-custom-marker.vue","sourceRoot":"node_modules/vue2-gmap-custom-marker","sourcesContent":["<template>\n  <div :style=\"{opacity: opacity}\">\n    <slot/>\n  </div>\n</template>\n<script>\nimport * as VueGoogleMaps from \"vue2-google-maps\";\nexport default {\n  mixins: [VueGoogleMaps.MapElementMixin],\n  props: {\n    marker: {\n      type: Object,\n      default: undefined\n    },\n    offsetX: {\n      type: Number,\n      default: 0\n    },\n    offsetY: {\n      type: Number,\n      default: 0\n    },\n    alignment: {\n      type: String,\n      default: \"top\"\n    },\n    zIndex: {\n      type: Number,\n      default: 50\n    }\n  },\n  inject: {\n    $clusterPromise: {\n      default: null\n    }\n  },\n  beforeCreate(options) {\n    if (this.$clusterPromise) {\n      options.map = null;\n    }\n\n    return this.$clusterPromise;\n  },\n  methods: {\n    afterCreate(inst) {\n      if (this.$clusterPromise) {\n        this.$clusterPromise.then(co => {\n          co.addMarker(inst);\n          this.$clusterObject = co;\n        });\n      }\n    }\n  },\n  data() {\n    return {\n      opacity: 0.01\n    };\n  },\n  watch: {\n    marker(val) {\n      this.$mapPromise.then(map => this.$overlay.setPosition());\n    },\n    zIndex(val) {\n      this.$overlay.repaint()\n    }\n  },\n  provide() {\n    const self = this;\n    return this.$mapPromise.then(map => {\n      class Overlay extends google.maps.OverlayView {\n        constructor(map) {\n          super();\n          this.setMap(map);\n          this.draw = () => this.repaint();\n          this.setPosition = () => this.repaint();\n        }\n        repaint() {\n          const div = self.$el;\n          const projection = this.getProjection();\n          if (projection && div) {\n            const posPixel = projection.fromLatLngToDivPixel(self.latLng);\n            let x, y;\n            switch (self.alignment) {\n              case \"top\":\n                x = posPixel.x - div.offsetWidth / 2;\n                y = posPixel.y - div.offsetHeight;\n                break;\n              case \"bottom\":\n                x = posPixel.x - div.offsetWidth / 2;\n                y = posPixel.y;\n                break;\n              case \"left\":\n                x = posPixel.x - div.offsetWidth;\n                y = posPixel.y - div.offsetHeight / 2;\n                break;\n              case \"right\":\n                x = posPixel.x;\n                y = posPixel.y - div.offsetHeight / 2;\n                break;\n              case \"center\":\n                x = posPixel.x - div.offsetWidth / 2;\n                y = posPixel.y - div.offsetHeight / 2;\n                break;\n              case \"topleft\":\n              case \"lefttop\":\n                x = posPixel.x - div.offsetWidth;\n                y = posPixel.y - div.offsetHeight;\n                break;\n              case \"topright\":\n              case \"righttop\":\n                x = posPixel.x;\n                y = posPixel.y - div.offsetHeight;\n                break;\n              case \"bottomleft\":\n              case \"leftop\":\n                x = posPixel.x - div.offsetWidth;\n                y = posPixel.y;\n                break;\n              case \"bottomright\":\n              case \"rightbottom\":\n                x = posPixel.x;\n                y = posPixel.y;\n                break;\n              default:\n                throw new Error(\"Invalid alignment type of custom marker!\");\n                break;\n            }\n            div.style.left = x + self.offsetX + \"px\";\n            div.style.top = y + self.offsetY + \"px\";\n            div.style[\"z-index\"] = self.zIndex;\n          }\n        }\n        onAdd() {\n          const div = self.$el;\n          const panes = this.getPanes();\n          div.style.position = \"absolute\";\n          div.style.display = \"inline-block\";\n          div.style.zIndex = self.zIndex;\n          panes.overlayLayer.appendChild(div);\n          panes.overlayMouseTarget.appendChild(div);\n          this.getDraggable = () => false;\n          this.getPosition = () => {\n            return new google.maps.LatLng(self.lat, self.lng);\n          };\n          self.afterCreate(this);\n        }\n        onRemove() {\n          if (self.$el) {\n            const ua = window.navigator.userAgent\n            const msie = ua.indexOf(\"MSIE \")\n            if (msie > 0 || !!ua.match(/Trident.*rv\\:11\\./)) {\n              self.$el.parentNode.removeChild(self.$el)\n            } else {\n              self.$el.remove();\n            }\n          }\n        }\n      }\n      this.$overlay = new Overlay(map);\n      setTimeout(() => {\n          if (this.$overlay) {\n            this.$overlay.repaint();\n            this.opacity = 1;\n          }\n      }, 100);\n    });\n  },\n  computed: {\n    lat() {\n      return parseFloat(\n        isNaN(this.marker.lat) ? this.marker.latitude : this.marker.lat\n      );\n    },\n    lng() {\n      return parseFloat(\n        isNaN(this.marker.lng) ? this.marker.longitude : this.marker.lng\n      );\n    },\n    latLng() {\n      if (this.marker instanceof google.maps.LatLng) {\n          return this.marker;\n      }\n      return new google.maps.LatLng(this.lat, this.lng);\n    }\n  },\n  destroyed() {\n     if (this.$clusterObject) {\n      this.$clusterObject.removeMarker(this.$overlay, true);\n    } else {\n      this.$overlay.setMap(null);\n      this.$overlay = undefined;\n    }\n  }\n};\n</script>\n"]}]}